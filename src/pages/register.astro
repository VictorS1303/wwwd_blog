---
import LoginSignUpLayout from "../layouts/LoginSignUpLayout.astro"
import Form from "../components/form/Form.astro"
import Button from "../components/button/Button.astro"
import Dialog from "../components/dialog/Dialog.astro"

const signUpFormInputs = [
  {
    type: "text",
    label: "Name",
    name: "name",
    placeholder: "Enter your name",
    required: true,
  },
  {
    type: "email",
    label: "Email",
    name: "email",
    placeholder: "Enter your email",
    required: true,
  },
  {
    type: "password",
    label: "Password",
    name: "password",
    required: true,
    placeholder: "Please enter password",
  },
  {
    type: "password",
    label: "Repeat password",
    name: "repeat_password",
    required: true,
    placeholder: "Please repeat password",
  },
  {
    type: "file",
    label: "Profile image",
    name: "profile_image",
    required: true,
  },
]
---

<LoginSignUpLayout title="Sign up">
  <Form
    isFormHeader={true}
    headerText="Sign up"
    inputs={signUpFormInputs}
    isSubmitButton={true}
    id="sign_up_form"
    buttonText="Sign up"
  />
  <div class="text-center mt-4">
    <h4>
      Already a user? Log in <Button href="/login" buttonText="here." />
    </h4>
  </div>

  <!-- Register Failed Modal -->
  <Dialog
    id="register_failed_modal"
    type="warning"
    headerText="REGISTER FAILED"
    textBlockParagraphText="At least one of the credentials was wrong. Please try again!"
  />

  <!-- Register Succeeded Modal -->
  <Dialog
    id="register_succeeded_modal"
    type="warning"
    headerText="REGISTERING SUCCEEDED"
    textBlockParagraphText="Registering happened successfully! You will be logged in and redirected shortly!"
  />
</LoginSignUpLayout>

<script>
  import { supabaseClient } from "../../js/supabase/supabase_client"
  import { registerAndLogin } from "../../js/utils/supabase_methods"

  const signUpForm = document.querySelector<HTMLFormElement>("#sign_up_form")
  const registerFailedModal = document.querySelector("#register_failed_modal")
  const registerSucceededModal = document.querySelector(
    "#register_succeeded_modal",
  )

  signUpForm?.addEventListener("submit", (e) => handleSignUp(e))

  async function handleSignUp(e) {
    e.preventDefault()

    const formData = new FormData(signUpForm)
    const name = formData.get("name")
    const email = formData.get("email")
    const password = formData.get("password")
    const repeatPassword = formData.get("repeat_password")
    const profileImageFile = signUpForm.elements["profile_image"]?.files[0]

    console.log("Profile image file:", profileImageFile) // ✅ Add this
    console.log("File name:", profileImageFile?.name) // ✅ Add this
    console.log("File size:", profileImageFile?.size) // ✅ Add this

    // Validate password match
    if (password !== repeatPassword) {
      alert("Passwords do not match!")
      return
    }

    // Register user and upload image in one flow
    const signUpResult = await registerAndLogin(
      name,
      email,
      password,
      profileImageFile,
    )

    console.log("Full sign up result:", signUpResult) // ✅ Add this
    console.log("Avatar URL from result:", signUpResult?.avatarUrl) // ✅ Add this

    if (!signUpResult?.success) {
      console.error("Registration failed:", signUpResult?.signUpError)
      registerFailedModal?.showModal()
      return
    }

    const user = signUpResult.user
    const avatarImageUrl = signUpResult.avatarUrl

    // Insert user data into your users table
    const { error: dbError } = await supabaseClient.from("users").upsert(
      {
        id: user.id,
        name,
        email,
        avatar_file_name: avatarImageUrl,
      },
      { onConflict: "id" },
    )

    if (dbError) {
      console.error("Failed to save user in DB:", dbError.message)
      registerFailedModal?.showModal()
      return
    }

    console.log("User saved in 'users' table")

    // Success - reset form and show modal
    signUpForm?.reset()
    registerSucceededModal?.showModal()

    // setTimeout(() => {
    //   window.location.href = "/blog-posts"
    // }, 2000)
  }
</script>
