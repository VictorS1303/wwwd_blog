<!-- ---
import Aside from "../aside/Aside.astro"
import Header from "../header/Header.astro"
import { buildTableOfContents } from "../../../js/toc"

const { headings, heading, headerText } = Astro.props

// Ensure headings is always an array
const normalizedHeadings = Array.isArray(headings) ? headings : []

const headingsToRender = heading
  ? [heading]
  : buildTableOfContents(normalizedHeadings)
// Calculate indentation based on heading depth
function getIndent(depth) {
  switch (depth) {
    case 1:
      return 0
    case 2:
      return 1.5 // 1.5rem for h2
    case 3:
      return 2.5 // slightly less than linear
    default:
      return 2.5 + (depth - 3) * 1 // h4+ add 1rem per level
  }
}

console.log(Array.isArray(headings), headings)
---

<Aside class="table-of-content" id="table_of_content">
  <div class="sticky right-0 top-4">
    <Header headerText={headerText} />
    <nav>
      <ul>
        {
          headingsToRender.map((heading) => (
            <li
              style={`padding-left: ${getIndent(heading.depth)}rem;`}
              class="text-[var(--secondary-text-color)] mb-1 "
            >
              <a
                href={`#${heading.slug}`}
                class="toc-link hover:border-b-2 border-[var(--secondary-text-color)]"
              >
                {heading.text}
              </a>

              {heading.subHeadings.length > 0 && (
                <ul>
                  {heading.subHeadings.map((subheading) => (
                    <Astro.self heading={subheading} />
                  ))}
                </ul>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</Aside> -->
