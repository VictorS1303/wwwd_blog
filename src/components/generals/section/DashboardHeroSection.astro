---
const { src, alt, isDashboardHeader } = Astro.props

import Section from "./Section.astro"
import Image from "../../imags/Image.astro"
import Header from "../../header/Header.astro"
import ControlButtonsContainer from "../../containers/ControlButtonsContainer.astro"

const controlButtons = [
  {
    buttonText: "Edit profile",
    id: "edit_profile_button",
    class: "edit-profile-button",
    isDashboardControlButton: true,
  },
  {
    buttonText: "Log out",
    class: "log-out-button",
    id: "log_out_button",
    isDashboardControlButton: true,
  },
]
---

<Section class="hero">
  <div class="flex flex-col md:flex-row md:items-start md:gap-6">
    <!-- Avatar Image - will be populated by client-side script -->
    <div id="avatar-container" class="flex-shrink-0 mb-4 md:mb-0">
      <!-- Placeholder while loading -->
      <div class="h-[175px] w-[175px] bg-gray-200 rounded-md animate-pulse">
      </div>
    </div>

    <!-- Header + Buttons -->
    <div class="flex flex-col items-start text-center md:text-left">
      <Header
        id="dashboard_header"
        class="text-2xl font-semibold mb-2"
        isDashboardHeader={isDashboardHeader}
      />
      <ControlButtonsContainer class="mt-2" buttons={controlButtons} />
    </div>
  </div>
</Section>

<script type="module">
  import { supabaseClient } from "../../../../js/supabase/supabase_client.js"

  document.addEventListener("DOMContentLoaded", async () => {
    const {
      data: { session },
      error,
    } = await supabaseClient.auth.getSession()

    if (error) {
      console.error("Error getting session:", error)
      return
    }

    const user = session?.user

    if (!user) {
      console.log("No user found")
      return
    }

    const avatarUrl = user.user_metadata?.avatar_url
    const userName = user.user_metadata?.username || "User"

    const headerEl = document.querySelector("#dashboard_header")
    const avatarContainer = document.querySelector("#avatar_container")

    // Update header
    if (headerEl) {
      headerEl.textContent = `Welcome, ${userName}!`
    }

    // Update avatar - replace the placeholder
    if (avatarContainer) {
      avatarContainer.innerHTML = "" // Clear placeholder

      if (avatarUrl) {
        const img = document.createElement("img")
        img.src = avatarUrl
        img.alt = "User avatar"
        img.className = "h-[175px] w-[175px] object-cover rounded-md"
        avatarContainer.appendChild(img)
      }
    }
  })
</script>
