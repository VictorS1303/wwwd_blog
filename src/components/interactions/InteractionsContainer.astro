---
import Button from "../../components/button/Button.astro"
import Header from "../../components/header/Header.astro"
import Dialog from "../dialog/Dialog.astro"

const { interactionButtons = [] } = Astro.props

const dialogButtons = [
  {
    buttonText: "Sign up",
    href: "/sign-up",
  },
  {
    buttonText: "Login",
    href: "/login",
  },
]
---

<div class="interaction-buttons-container mt-12">
  <Header headerText="Like & Share" isTextBlockHeader={true} />
  <div class="flex gap-4 mt-4">
    {
      interactionButtons.length > 0 &&
        interactionButtons.map((interactionButton) => (
          <Button
            id={interactionButton.id}
            class={
              "interaction-button " +
              interactionButton.class +
              (interactionButton.isLoggedIn
                ? ""
                : " opacity-50 cursor-not-allowed")
            }
            data-is-logged-in={interactionButton.isLoggedIn ? "true" : "false"}
            download={interactionButton.download}
            href={interactionButton.href}
            share={interactionButton.share}
            isInteractionButton={[
              "like_button",
              "save_button",
              "share_button",
            ].includes(interactionButton.id)}
          />
        ))
    }
  </div>
</div>

<!-- Login Warning Modal -->
<Dialog
  id="login_warning_modal"
  type="login"
  headerText="YOU ARE NOT LOGGED IN"
  textBlockParagraphText="You must be logged in to continue."
  dialogButtons={dialogButtons}
/>

<!-- Share Modal -->
<Dialog
  id="share_blog_post_modal"
  type="share"
  headerText="URL COPIED TO CLIPBOARD"
  textBlockParagraphText="The blog post is now ready to be shared wherever and with whomever you want!"
/>

<script>
  const interactionButtonsContainer = document.querySelector(
    ".interaction-buttons-container",
  )

  const loginWarningModal = document.querySelector("#login_warning_modal")
  const shareBlogPostModal = document.querySelector("#share_blog_post_modal")

  interactionButtonsContainer?.addEventListener("click", (e) =>
    chooseInteraction(e),
  )

  function chooseInteraction(e) {
    const button = e.target.closest("button, a")
    if (!button) {
      return
    }

    const isLoggedIn = button.dataset.isLoggedIn === "true"

    if (!isLoggedIn) {
      loginWarningModal?.showModal()
      e.preventDefault()
      return
    }

    switch (button.id) {
      case "like_button":
        likePost()
        break
      case "save_button":
        savePost()
        break
      case "download_button":
        downloadPost()
        break
      case "share_button":
        sharePost()
        break
      default:
        console.log("No action defined for this button")
    }
  }

  function likePost() {
    console.log("Post liked!")
  }
  function savePost() {
    console.log("Post saved!")
  }
  function downloadPost() {
    console.log("Post downloaded!")
  }
  function sharePost() {
    const postUrl = window.location.href
    navigator.clipboard.writeText(postUrl).then(() => {
      shareBlogPostModal?.showModal()
    })
  }
</script>
