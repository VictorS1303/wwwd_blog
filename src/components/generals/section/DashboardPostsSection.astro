---
import Section from "./Section.astro"
import Header from "../../header/Header.astro"
---

<div class="sections-container">
  <Section id="liked_posts">
    <Header isDashboardHeader={true} headerText="Liked Posts" />
    <div
      class="liked-cards-container dashboard-cards-container flex flex-col justify-start gap-8 md:flex-row"
      id="liked_posts_container"
    >
    </div>
  </Section>

  <Section id="saved_posts">
    <Header isDashboardHeader={true} headerText="Saved Posts" />
    <div
      class="saved-cards-container dashboard-cards-container flex flex-col justify-start gap-8 md:flex-row"
      id="saved_posts_container"
    >
    </div>
  </Section>
</div>

<script>
  import {
    fetchLikedPosts,
    fetchSavedPosts,
    dislikePost,
    unsavePost,
  } from "../../../../js/utils/supabase_methods"

  const likedPostsContainer = document.querySelector("#liked_posts_container")
  const savedPostsContainer = document.querySelector("#saved_posts_container")

  // Fetch Posts from Supabase
  const likedPosts = await fetchLikedPosts()
  const savedPosts = await fetchSavedPosts()

  // Card Template Creation
  function createCardTemplate(
    container,
    classes,
    actionButton,
    overlay,
    image,
    link,
  ) {
    const postCard = document.createElement("article")
    postCard.className = classes
    postCard.append(image, overlay, link, actionButton)
    container?.appendChild(postCard)
  }

  function createActionButton(type = "like") {
    const button = document.createElement("button")
    button.className =
      "absolute z-20 bg-white flex items-center justify-center rounded-full right-2 top-2 group w-10 h-10 cursor-pointer"

    if (type === "like") {
      const heart = document.createElement("i")
      heart.className =
        "fas fa-heart text-2xl text-[var(--secondary-text-color)]"
      button.appendChild(heart)
    } else if (type === "save") {
      const bookmark = document.createElement("i")
      bookmark.className =
        "fas fa-bookmark text-2xl text-[var(--secondary-text-color)]"
      button.appendChild(bookmark)
    }

    return button
  }

  function createOverlay() {
    const overlay = document.createElement("div")
    overlay.className =
      "rounded-md absolute top-0 left-0 w-full h-full bg-black opacity-30"
    return overlay
  }

  function createImage(post) {
    const img = document.createElement("img")
    img.className = "absolute top-0 left-0 w-full h-full object-cover"
    img.src = `${post.blog_posts.post_image}.webp`
    return img
  }

  function createHeading(title) {
    const header = document.createElement("header")
    header.className =
      "absolute bottom-0 left-0 w-full p-2 text-2xl text-center font-bold line-clamp-1 text-white"
    header.textContent = title
    return header
  }

  function createLink(href, child) {
    const link = document.createElement("a")
    link.href = href
    link.target = "_blank"
    link.className =
      "cursor-pointer group hover:text-[var(--secondary-text-color)]"
    link.appendChild(child)
    return link
  }

  function createLikedPostCard(post) {
    const button = createActionButton("like")
    button.dataset.postId = post.id
    const overlay = createOverlay()
    const img = createImage(post)
    const heading = createHeading(post.blog_posts.post_title)
    const link = createLink(`/blog-posts/${post.blog_posts.post_slug}`, heading)

    createCardTemplate(
      likedPostsContainer,
      "post-card relative w-[225px] h-[250px] overflow-hidden rounded-md group",
      button,
      overlay,
      img,
      link,
    )
  }

  function createSavedPostCard(post) {
    const button = createActionButton("save")
    button.dataset.postId = post.id
    const overlay = createOverlay()
    const img = createImage(post)
    const heading = createHeading(post.blog_posts.post_title)
    const link = createLink(`/blog-posts/${post.blog_posts.post_slug}`, heading)

    createCardTemplate(
      savedPostsContainer,
      "post-card relative w-[225px] h-[250px] overflow-hidden rounded-md group",
      button,
      overlay,
      img,
      link,
    )
  }

  // Render Cards
  likedPosts.forEach(createLikedPostCard)
  savedPosts.forEach(createSavedPostCard)

  // Button Actions
  document
    .querySelector(".sections-container")
    ?.addEventListener("click", (e) => {
      const button = e.target.closest("button")
      if (!button) {
        return
      }

      const postId = button.dataset.postId

      if (button.querySelector(".fa-heart")) {
        dislikePost(postId)
      } else if (button.querySelector(".fa-bookmark")) {
        unsavePost(postId)
      }
    })
</script>
